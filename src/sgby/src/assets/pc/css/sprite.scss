// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-name: 'arrow';
$arrow-x: 980px;
$arrow-y: 486px;
$arrow-offset-x: -980px;
$arrow-offset-y: -486px;
$arrow-width: 86px;
$arrow-height: 111px;
$arrow-total-width: 1149px;
$arrow-total-height: 900px;
$arrow-image: '/src/assets/pc/img/sprite.png';
$arrow: (980px, 486px, -980px, -486px, 86px, 111px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'arrow', );
$balloon-name: 'balloon';
$balloon-x: 980px;
$balloon-y: 0px;
$balloon-offset-x: -980px;
$balloon-offset-y: 0px;
$balloon-width: 169px;
$balloon-height: 236px;
$balloon-total-width: 1149px;
$balloon-total-height: 900px;
$balloon-image: '/src/assets/pc/img/sprite.png';
$balloon: (980px, 0px, -980px, 0px, 169px, 236px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'balloon', );
$btn-play-h-name: 'btn-play-h';
$btn-play-h-x: 980px;
$btn-play-h-y: 246px;
$btn-play-h-offset-x: -980px;
$btn-play-h-offset-y: -246px;
$btn-play-h-width: 99px;
$btn-play-h-height: 110px;
$btn-play-h-total-width: 1149px;
$btn-play-h-total-height: 900px;
$btn-play-h-image: '/src/assets/pc/img/sprite.png';
$btn-play-h: (980px, 246px, -980px, -246px, 99px, 110px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'btn-play-h', );
$btn-play-name: 'btn-play';
$btn-play-x: 980px;
$btn-play-y: 366px;
$btn-play-offset-x: -980px;
$btn-play-offset-y: -366px;
$btn-play-width: 99px;
$btn-play-height: 110px;
$btn-play-total-width: 1149px;
$btn-play-total-height: 900px;
$btn-play-image: '/src/assets/pc/img/sprite.png';
$btn-play: (980px, 366px, -980px, -366px, 99px, 110px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'btn-play', );
$btn-reserve-h-name: 'btn-reserve-h';
$btn-reserve-h-x: 739px;
$btn-reserve-h-y: 0px;
$btn-reserve-h-offset-x: -739px;
$btn-reserve-h-offset-y: 0px;
$btn-reserve-h-width: 231px;
$btn-reserve-h-height: 354px;
$btn-reserve-h-total-width: 1149px;
$btn-reserve-h-total-height: 900px;
$btn-reserve-h-image: '/src/assets/pc/img/sprite.png';
$btn-reserve-h: (739px, 0px, -739px, 0px, 231px, 354px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'btn-reserve-h', );
$btn-reserve-name: 'btn-reserve';
$btn-reserve-x: 0px;
$btn-reserve-y: 546px;
$btn-reserve-offset-x: 0px;
$btn-reserve-offset-y: -546px;
$btn-reserve-width: 231px;
$btn-reserve-height: 354px;
$btn-reserve-total-width: 1149px;
$btn-reserve-total-height: 900px;
$btn-reserve-image: '/src/assets/pc/img/sprite.png';
$btn-reserve: (0px, 546px, 0px, -546px, 231px, 354px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'btn-reserve', );
$title1-name: 'title1';
$title1-x: 0px;
$title1-y: 364px;
$title1-offset-x: 0px;
$title1-offset-y: -364px;
$title1-width: 701px;
$title1-height: 172px;
$title1-total-width: 1149px;
$title1-total-height: 900px;
$title1-image: '/src/assets/pc/img/sprite.png';
$title1: (0px, 364px, 0px, -364px, 701px, 172px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'title1', );
$title2-name: 'title2';
$title2-x: 241px;
$title2-y: 546px;
$title2-offset-x: -241px;
$title2-offset-y: -546px;
$title2-width: 594px;
$title2-height: 132px;
$title2-total-width: 1149px;
$title2-total-height: 900px;
$title2-image: '/src/assets/pc/img/sprite.png';
$title2: (241px, 546px, -241px, -546px, 594px, 132px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'title2', );
$title3-name: 'title3';
$title3-x: 0px;
$title3-y: 182px;
$title3-offset-x: 0px;
$title3-offset-y: -182px;
$title3-width: 716px;
$title3-height: 172px;
$title3-total-width: 1149px;
$title3-total-height: 900px;
$title3-image: '/src/assets/pc/img/sprite.png';
$title3: (0px, 182px, 0px, -182px, 716px, 172px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'title3', );
$title4-name: 'title4';
$title4-x: 0px;
$title4-y: 0px;
$title4-offset-x: 0px;
$title4-offset-y: 0px;
$title4-width: 729px;
$title4-height: 172px;
$title4-total-width: 1149px;
$title4-total-height: 900px;
$title4-image: '/src/assets/pc/img/sprite.png';
$title4: (0px, 0px, 0px, 0px, 729px, 172px, 1149px, 900px, '/src/assets/pc/img/sprite.png', 'title4', );
$spritesheet-width: 1149px;
$spritesheet-height: 900px;
$spritesheet-image: '/src/assets/pc/img/sprite.png';
$spritesheet-sprites: ($arrow, $balloon, $btn-play-h, $btn-play, $btn-reserve-h, $btn-reserve, $title1, $title2, $title3, $title4, );
$spritesheet: (1149px, 900px, '/src/assets/pc/img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
